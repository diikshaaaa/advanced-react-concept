{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\2-useEffect\\\\2-useEffect-cleanup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UseEffectCleanup = () => {\n  _s();\n\n  const [size, setSize] = useState(window.innerWidth); // Window.innerWidth returns the interior width of the window in pixels\n\n  const checkSize = () => {\n    setSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n    window.addEventListener('resize', checkSize); // addEventListener() is an inbuilt function in JavaScript which takes the event to listen for\n\n    return () => {\n      console.log('cleanup');\n      window.removeEventListener('resize', checkSize); // removeEventListener() is an inbuilt function in JavaScript which removes an event handler \n    };\n  }, []);\n  console.log('render');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"window\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [size, \" PX\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UseEffectCleanup, \"huorwLSgm/HQsuxa0wa8WY6/KpU=\");\n\n_c = UseEffectCleanup;\nexport default UseEffectCleanup;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffectCleanup\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/2-useEffect/2-useEffect-cleanup.js"],"names":["React","useState","useEffect","UseEffectCleanup","size","setSize","window","innerWidth","checkSize","console","log","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACK,MAAM,CAACC,UAAR,CAAhC,CAD6B,CAE7B;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAACC,MAAM,CAACC,UAAR,CAAP;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCH,SAAlC,EAFc,CAGd;;AACA,WAAO,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAJ,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCJ,SAArC,EAFW,CAGX;AACD,KAJD;AAKD,GATQ,EASN,EATM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBAAKN,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAzBD;;GAAMD,gB;;KAAAA,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UseEffectCleanup = () => {\r\n  const [size, setSize] = useState(window.innerWidth);\r\n  // Window.innerWidth returns the interior width of the window in pixels\r\n\r\n  const checkSize = () => {\r\n    setSize(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect');\r\n    window.addEventListener('resize', checkSize);\r\n    // addEventListener() is an inbuilt function in JavaScript which takes the event to listen for\r\n    return () => {\r\n      console.log('cleanup');\r\n      window.removeEventListener('resize', checkSize);\r\n      // removeEventListener() is an inbuilt function in JavaScript which removes an event handler \r\n    };\r\n  }, []);\r\n  console.log('render');\r\n  return (\r\n    <>\r\n      <h1>window</h1>\r\n      <h2>{size} PX</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UseEffectCleanup;"]},"metadata":{},"sourceType":"module"}