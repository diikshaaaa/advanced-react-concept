{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\3-conditional-rendering\\\\2-short-circuit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShortCircuit = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [isError, setIsError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: text || 'Diksha'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => setIsError(true),\n      children: \"toggle error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 19\n    }, this), isError ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"there is an error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"there is no error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShortCircuit, \"D3AL1pWOdntqdDs2MDOpiKPGLSg=\");\n\n_c = ShortCircuit;\nexport default ShortCircuit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShortCircuit\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/3-conditional-rendering/2-short-circuit.js"],"names":["React","useState","ShortCircuit","text","setText","isError","setIsError"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKE,IAAI,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAE,MAAMG,UAAU,CAAC,IAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGD,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALd,EAMGA,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADF;AAgBD,CApBD;;GAAMH,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ShortCircuit = () => {\r\n  const [text, setText] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n  \r\n  return (\r\n    <>\r\n      <h1>{text || 'Diksha'}</h1>\r\n      <button className='btn' onClick={() => setIsError(true)}>\r\n        toggle error\r\n      </button>\r\n      {isError && <h1>Error...</h1>}\r\n      {isError ? (\r\n        <p>there is an error...</p>\r\n      ) : (\r\n        <div>\r\n          <h2>there is no error</h2>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShortCircuit;"]},"metadata":{},"sourceType":"module"}