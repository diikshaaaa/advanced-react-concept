{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\5-useRef\\\\2-useRef-prevent-rerender.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const count = useRef(0);\n  useEffect(() => {\n    count.current = count.current + 1;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Render Count: \", count.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"GaiDB+NGGpfcQPQqzjTvm9dC3ZY=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/5-useRef/2-useRef-prevent-rerender.js"],"names":["useState","useEffect","useRef","ReactDOM","App","inputValue","setInputValue","count","current","e","target","value","render","document","getElementById"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMO,KAAK,GAAGL,MAAM,CAAC,CAAD,CAApB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACC,OAAN,GAAgB,CAAhC;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEH,UAFT;AAGE,MAAA,QAAQ,EAAGI,CAAD,IAAOH,aAAa,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,mCAAmBJ,KAAK,CAACC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GAlBQJ,G;;KAAAA,G;AAoBTD,QAAQ,CAACS,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction App() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const count = useRef(0);\r\n\r\n  useEffect(() => {\r\n    count.current = count.current + 1;\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n      />\r\n      <h1>Render Count: {count.current}</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}