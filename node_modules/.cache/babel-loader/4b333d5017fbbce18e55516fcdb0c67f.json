{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\2-useEffect\\\\4-useEffect-dependencies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Counter() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [calculation, setCalculation] = useState(0);\n  useEffect(() => {\n    setCalculation(() => count * 2);\n  }, [count]); // <- add the count variable here\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calculation: \", calculation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"dYqs7xbQwR/GAZLMtMv4/OC24MY=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/2-useEffect/4-useEffect-dependencies.js"],"names":["React","useState","useEffect","ReactDOM","Counter","count","setCount","calculation","setCalculation","c"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc,CAAC,MAAMH,KAAK,GAAG,CAAf,CAAd;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAJiB,CAMJ;;AAEb,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,4BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAEG,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,kCAAiBF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAfQH,O;;KAAAA,O;AAiBT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction Counter() {\r\n  const [count, setCount] = useState(0);\r\n  const [calculation, setCalculation] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setCalculation(() => count * 2);\r\n  }, [count]); // <- add the count variable here\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p>Count: {count}</p>\r\n      <button onClick={() => setCount((c) => c + 1)}>+</button>\r\n      <p>Calculation: {calculation}</p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}