{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\11-react-router-a\\\\index.js\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Layout from \"./Layout\"; // import Home from \"./Home\";\n// import Blogs from \"./Blogs\";\n// import Contact from \"./Contact\";\n\nimport NoPage from \"./NoPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RouterExample() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 34\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NoPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this) // We wrap our content first with <BrowserRouter>.It is the parent component that is used to store all of the other components.\n  // Then we define our <Routes>. An application can have multiple <Routes>. \n  // <Route> can be nested(eg in this case).\n  // nested <Route> inherit and add to the parent route. So the blogs path is combined with the parent and becomes /blogs. \n  // Home component route does not have a path but has an index attribute. That specifies this route as the default route for the parent route, which is /.\n  //  the path to * will act as a catch-all for any undefined URLs. This is great for a 404 error page.\n  ;\n}\n_c = RouterExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouterExample\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/11-react-router-a/index.js"],"names":["ReactDOM","BrowserRouter","Routes","Route","Layout","NoPage","RouterExample"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAAzB;AAAA,+BAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CAWE;AACA;AACA;AACA;AACA;AACA;AAhBF;AAkBD;KAnBuBA,a","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Layout from \"./Layout\";\r\n// import Home from \"./Home\";\r\n// import Blogs from \"./Blogs\";\r\n// import Contact from \"./Contact\";\r\nimport NoPage from \"./NoPage\";\r\n\r\nexport default function RouterExample() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Layout />}>\r\n          {/* <Route index element={<Home />} /> */}\r\n          {/* <Route path=\"blogs\" element={<Blogs />} /> */}\r\n          {/* <Route path=\"contact\" element={<Contact />} /> */}\r\n          <Route path=\"*\" element={<NoPage />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n    // We wrap our content first with <BrowserRouter>.It is the parent component that is used to store all of the other components.\r\n    // Then we define our <Routes>. An application can have multiple <Routes>. \r\n    // <Route> can be nested(eg in this case).\r\n    // nested <Route> inherit and add to the parent route. So the blogs path is combined with the parent and becomes /blogs. \r\n    // Home component route does not have a path but has an index attribute. That specifies this route as the default route for the parent route, which is /.\r\n    //  the path to * will act as a catch-all for any undefined URLs. This is great for a 404 error page.\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}