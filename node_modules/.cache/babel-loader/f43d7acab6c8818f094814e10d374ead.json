{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\3-conditional-rendering\\\\3-show-hide.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowHide = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => setShow(!show),\n      children: \"show/hide\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(Item, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowHide, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = ShowHide;\n\nconst Item = () => {\n  _s2();\n\n  const [size, setSize] = useState(window.innerWidth);\n\n  const checkSize = () => {\n    setSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', checkSize);\n    return () => {\n      window.removeEventListener('resize', checkSize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Window\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"size : \", size]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Item, \"huorwLSgm/HQsuxa0wa8WY6/KpU=\");\n\n_c2 = Item;\nexport default ShowHide;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowHide\");\n$RefreshReg$(_c2, \"Item\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/3-conditional-rendering/3-show-hide.js"],"names":["React","useState","useEffect","ShowHide","show","setShow","Item","size","setSize","window","innerWidth","checkSize","addEventListener","removeEventListener","marginTop"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAE,MAAMI,OAAO,CAAC,CAACD,IAAF,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGA,IAAI,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAJX;AAAA,kBADF;AAQD,CAVD;;GAAMD,Q;;KAAAA,Q;;AAYN,MAAMG,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACQ,MAAM,CAACC,UAAR,CAAhC;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAACC,MAAM,CAACC,UAAR,CAAP;AACD,GAFD;;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCD,SAAlC;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,SAArC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4BAAYP,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;IAAMD,I;;MAAAA,I;AAoBN,eAAeH,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ShowHide = () => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <>\r\n      <button className='btn' onClick={() => setShow(!show)}>\r\n        show/hide\r\n      </button>\r\n      {show && <Item />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Item = () => {\r\n  const [size, setSize] = useState(window.innerWidth);\r\n  const checkSize = () => {\r\n    setSize(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener('resize', checkSize);\r\n    return () => {\r\n      window.removeEventListener('resize', checkSize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: '2rem' }}>\r\n      <h1>Window</h1>\r\n      <h2>size : {size}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowHide;"]},"metadata":{},"sourceType":"module"}