{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\6-useReducer-b\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../data';\nimport { reducer } from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  people: [],\n  isModalOpen: false,\n  modalContent: ''\n};\n\nconst Index = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        name\n      };\n      dispatch({\n        type: 'ADD_ITEM',\n        payload: newItem\n      });\n      setName('');\n    } else {\n      dispatch({\n        type: 'NO_VALUE'\n      }); // dispatch() is the method used to dispatch actions and trigger state changes to the store\n    }\n  };\n\n  const closeModal = () => {\n    dispatch({\n      type: 'CLOSE_MODAL'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [state.isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: closeModal,\n      modalContent: state.modalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), state.people.map(person => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch({\n            type: 'REMOVE_ITEM',\n            payload: person.id\n          }),\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Index, \"48Rf3GslfB5KPrUCYNOvUixMo8o=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/6-useReducer-b/index.js"],"names":["React","useState","useReducer","Modal","data","reducer","defaultState","people","isModalOpen","modalContent","Index","name","setName","state","dispatch","handleSubmit","e","preventDefault","newItem","id","Date","getTime","toString","type","payload","closeModal","target","value","map","person"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,WAAW,EAAE,KAFM;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACG,OAAD,EAAUC,YAAV,CAApC;;AACA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIN,IAAJ,EAAU;AACR,YAAMO,OAAO,GAAG;AAAEC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAN;AAAuCX,QAAAA;AAAvC,OAAhB;AACAG,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEN;AAA7B,OAAD,CAAR;AACAN,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KAJD,MAIO;AACLE,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR,CADK,CAEL;AACD;AACF,GAVD;;AAWA,QAAME,UAAU,GAAG,MAAM;AACvBX,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,eACGV,KAAK,CAACL,WAAN,iBACC,QAAC,KAAD;AAAO,MAAA,UAAU,EAAEiB,UAAnB;AAA+B,MAAA,YAAY,EAAEZ,KAAK,CAACJ;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIE;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAA8B,MAAA,SAAS,EAAC,MAAxC;AAAA,8BACE;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEJ,IAFT;AAGE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACU,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAcGd,KAAK,CAACN,MAAN,CAAaqB,GAAb,CAAkBC,MAAD,IAAY;AAC5B,0BACE;AAAqB,QAAA,SAAS,EAAC,MAA/B;AAAA,gCACE;AAAA,oBAAKA,MAAM,CAAClB;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,OAAO,EAAE,MACPG,QAAQ,CAAC;AAAES,YAAAA,IAAI,EAAE,aAAR;AAAuBC,YAAAA,OAAO,EAAEK,MAAM,CAACV;AAAvC,WAAD,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUU,MAAM,CAACV,EAAjB;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbA,CAdH;AAAA,kBADF;AA+BD,CAhDD;;GAAMT,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React, { useState, useReducer } from 'react';\r\nimport Modal from './Modal';\r\nimport { data } from '../../data';\r\nimport { reducer } from './reducer';\r\n\r\nconst defaultState = {\r\n  people: [],\r\n  isModalOpen: false,\r\n  modalContent: '',\r\n};\r\nconst Index = () => {\r\n  const [name, setName] = useState('');\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name) {\r\n      const newItem = { id: new Date().getTime().toString(), name };\r\n      dispatch({ type: 'ADD_ITEM', payload: newItem });\r\n      setName('');\r\n    } else {\r\n      dispatch({ type: 'NO_VALUE' });\r\n      // dispatch() is the method used to dispatch actions and trigger state changes to the store\r\n    }\r\n  };\r\n  const closeModal = () => {\r\n    dispatch({ type: 'CLOSE_MODAL' });\r\n  };\r\n  return (\r\n    <>\r\n      {state.isModalOpen && (\r\n        <Modal closeModal={closeModal} modalContent={state.modalContent} />\r\n      )}\r\n      <form onSubmit={handleSubmit} className='form'>\r\n        <div>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type='submit'>add </button>\r\n      </form>\r\n      {state.people.map((person) => {\r\n        return (\r\n          <div key={person.id} className='item'>\r\n            <h4>{person.name}</h4>\r\n            <button\r\n              onClick={() =>\r\n                dispatch({ type: 'REMOVE_ITEM', payload: person.id })\r\n              }\r\n            >\r\n              remove\r\n            </button>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}