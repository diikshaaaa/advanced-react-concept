{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\5-useRef\\\\3-useRef-track-statechange.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction useRefTrackStatechange() {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const previousInputValue = useRef(\"\");\n  useEffect(() => {\n    previousInputValue.current = inputValue;\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Value: \", inputValue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Previous Value: \", previousInputValue.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(useRefTrackStatechange, \"KNqfZOkpt+YobBKqzmhIfWQRe8M=\");\n\nexport default useRefTrackStatechange;","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/5-useRef/3-useRef-track-statechange.js"],"names":["useState","useEffect","useRef","useRefTrackStatechange","inputValue","setInputValue","previousInputValue","current","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;;;AAEA,SAASC,sBAAT,GAAkC;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMM,kBAAkB,GAAGJ,MAAM,CAAC,EAAD,CAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,kBAAkB,CAACC,OAAnB,GAA6BH,UAA7B;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEA,UAFT;AAGE,MAAA,QAAQ,EAAGI,CAAD,IAAOH,aAAa,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAHhC;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,oCAAoBN,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,qCAAqBE,kBAAkB,CAACC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD;;GAnBQJ,sB;;AAqBT,eAAeA,sBAAf","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction useRefTrackStatechange() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const previousInputValue = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    previousInputValue.current = inputValue;\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n      />\r\n      <h2>Current Value: {inputValue}</h2>\r\n      <h2>Previous Value: {previousInputValue.current}</h2>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default useRefTrackStatechange;"]},"metadata":{},"sourceType":"module"}