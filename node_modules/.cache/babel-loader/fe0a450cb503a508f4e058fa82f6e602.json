{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\12-memo-useMemo-useCallback\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useFetch } from '../../10-prop-types/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = 'https://course-api.com/javascript-store-products'; // every time props or state changes, component re-renders\n\nconst calculateMostExpensive = data => {\n  return data.reduce((total, item) => {\n    const price = item.fields.price;\n\n    if (price >= total) {\n      total = price;\n    }\n\n    return total;\n  }, 0) / 100;\n};\n\nconst Index = () => {\n  _s();\n\n  const {\n    products\n  } = useFetch(url);\n  const [count, setCount] = useState(0);\n  const [cart, setCart] = useState(0);\n  const addToCart = useCallback(() => {\n    setCart(cart + 1);\n  }, [cart]);\n  const mostExpensive = useMemo(() => calculateMostExpensive(products), [products]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => setCount(count + 1),\n      children: \"click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: '3rem'\n      },\n      children: [\"cart : \", cart]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Most Expensive : $ \", mostExpensive]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigList, {\n      products: products,\n      addToCart: addToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Index, \"ERNOFiPo4tmPkY6atbQE3fUDTYI=\", false, function () {\n  return [useFetch];\n});\n\n_c = Index;\nconst BigList = /*#__PURE__*/React.memo(_c2 = _ref => {\n  let {\n    products,\n    addToCart\n  } = _ref;\n  // useEffect(() => {\n  //   console.count('hello from big list');\n  // });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"products\",\n    children: products.map(product => {\n      return /*#__PURE__*/_jsxDEV(SingleProduct, { ...product,\n        addToCart: addToCart\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n});\n_c3 = BigList;\n\nconst SingleProduct = _ref2 => {\n  let {\n    fields,\n    addToCart\n  } = _ref2;\n  let {\n    name,\n    price\n  } = fields;\n  price = price / 100;\n  const image = fields.image[0].url; // useEffect(() => {\n  //   console.count('hello from product');\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"$ \", price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addToCart,\n      children: \"add to cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = SingleProduct;\nexport default Index;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"BigList$React.memo\");\n$RefreshReg$(_c3, \"BigList\");\n$RefreshReg$(_c4, \"SingleProduct\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/12-memo-useMemo-useCallback/index.js"],"names":["React","useState","useCallback","useMemo","useFetch","url","calculateMostExpensive","data","reduce","total","item","price","fields","Index","products","count","setCount","cart","setCart","addToCart","mostExpensive","marginTop","BigList","memo","map","product","id","SingleProduct","name","image"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\r\nimport { useFetch } from '../../10-prop-types/useFetch';\r\n\r\nconst url = 'https://course-api.com/javascript-store-products';\r\n\r\n// every time props or state changes, component re-renders\r\nconst calculateMostExpensive = (data) => {\r\n  return (\r\n    data.reduce((total, item) => {\r\n      const price = item.fields.price\r\n      if (price >= total) {\r\n        total = price\r\n      }\r\n      return total\r\n    }, 0) / 100\r\n  )\r\n}\r\n\r\nconst Index = () => {\r\n  const { products } = useFetch(url)\r\n  const [count, setCount] = useState(0)\r\n  const [cart, setCart] = useState(0)\r\n\r\n  const addToCart = useCallback(() => {\r\n    setCart(cart + 1)\r\n  }, [cart])\r\n\r\n  const mostExpensive = useMemo(() => calculateMostExpensive(products), [\r\n    products,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      <h1>Count : {count}</h1>\r\n      <button className='btn' onClick={() => setCount(count + 1)}>\r\n        click me\r\n      </button>\r\n      <h1 style={{ marginTop: '3rem' }}>cart : {cart}</h1>\r\n      <h1>Most Expensive : $ {mostExpensive}</h1>\r\n      <BigList products={products} addToCart={addToCart} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst BigList = React.memo(({ products, addToCart }) => {\r\n  // useEffect(() => {\r\n  //   console.count('hello from big list');\r\n  // });\r\n\r\n  return (\r\n    <section className='products'>\r\n      {products.map((product) => {\r\n        return (\r\n          <SingleProduct\r\n            key={product.id}\r\n            {...product}\r\n            addToCart={addToCart}\r\n          ></SingleProduct>\r\n        )\r\n      })}\r\n    </section>\r\n  )\r\n})\r\n\r\nconst SingleProduct = ({ fields, addToCart }) => {\r\n  let { name, price } = fields\r\n  price = price / 100\r\n  const image = fields.image[0].url\r\n\r\n  // useEffect(() => {\r\n  //   console.count('hello from product');\r\n  // });\r\n  return (\r\n    <article className='product'>\r\n      <img src={image} alt={name} />\r\n      <h4>{name}</h4>\r\n      <p>$ {price}</p>\r\n      <button onClick={addToCart}>add to cart</button>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}