{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\advanced-react-concept\\\\src\\\\tutorial\\\\7-prop-drilling\\\\1-prop-drilling.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { data } from '../../data'; // more components\n// fix - context api, redux (for more complex cases)\n// Prop Drilling is the process by which you pass data from one part of the React Component tree to another by going through other parts that do not need the data but only help in passing it around\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PropDrilling = () => {\n  _s();\n\n  const [people, setPeople] = useState(data);\n\n  const removePerson = id => {\n    setPeople(people => {\n      return people.filter(person => person.id !== id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"prop drilling\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      people: people,\n      removePerson: removePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PropDrilling, \"1LkHEtj2RWqZMtew8JQSoeuNX/M=\");\n\n_c = PropDrilling;\n\nconst List = _ref => {\n  let {\n    people,\n    removePerson\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: people.map(person => {\n      return /*#__PURE__*/_jsxDEV(SinglePerson, { ...person,\n        removePerson: removePerson\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_c2 = List;\n\nconst SinglePerson = _ref2 => {\n  let {\n    id,\n    name,\n    removePerson\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removePerson(id),\n      children: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = SinglePerson;\nexport default PropDrilling;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PropDrilling\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"SinglePerson\");","map":{"version":3,"sources":["D:/github_repos/react/advanced-react-concept/src/tutorial/7-prop-drilling/1-prop-drilling.js"],"names":["React","useState","data","PropDrilling","people","setPeople","removePerson","id","filter","person","List","map","SinglePerson","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,YAArB,C,CACA;AACA;AACA;;;;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACC,IAAD,CAApC;;AACA,QAAMI,YAAY,GAAIC,EAAD,IAAQ;AAC3BF,IAAAA,SAAS,CAAED,MAAD,IAAY;AACpB,aAAOA,MAAM,CAACI,MAAP,CAAeC,MAAD,IAAYA,MAAM,CAACF,EAAP,KAAcA,EAAxC,CAAP;AACD,KAFQ,CAAT;AAGD,GAJD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAEH,MAAd;AAAsB,MAAA,YAAY,EAAEE;AAApC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAbD;;GAAMH,Y;;KAAAA,Y;;AAeN,MAAMO,IAAI,GAAG,QAA8B;AAAA,MAA7B;AAAEN,IAAAA,MAAF;AAAUE,IAAAA;AAAV,GAA6B;AACzC,sBACE;AAAA,cACGF,MAAM,CAACO,GAAP,CAAYF,MAAD,IAAY;AACtB,0BACE,QAAC,YAAD,OAEMA,MAFN;AAGE,QAAA,YAAY,EAAEH;AAHhB,SACOG,MAAM,CAACF,EADd;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA;AADH,mBADF;AAaD,CAdD;;MAAMG,I;;AAgBN,MAAME,YAAY,GAAG,SAAgC;AAAA,MAA/B;AAAEL,IAAAA,EAAF;AAAMM,IAAAA,IAAN;AAAYP,IAAAA;AAAZ,GAA+B;AACnD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAKO;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMP,YAAY,CAACC,EAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMK,Y;AASN,eAAeT,YAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { data } from '../../data';\r\n// more components\r\n// fix - context api, redux (for more complex cases)\r\n// Prop Drilling is the process by which you pass data from one part of the React Component tree to another by going through other parts that do not need the data but only help in passing it around\r\n\r\n\r\nconst PropDrilling = () => {\r\n  const [people, setPeople] = useState(data);\r\n  const removePerson = (id) => {\r\n    setPeople((people) => {\r\n      return people.filter((person) => person.id !== id);\r\n    });\r\n  };\r\n  return (\r\n    <section>\r\n      <h3>prop drilling</h3>\r\n      <List people={people} removePerson={removePerson} />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst List = ({ people, removePerson }) => {\r\n  return (\r\n    <>\r\n      {people.map((person) => {\r\n        return (\r\n          <SinglePerson\r\n            key={person.id}\r\n            {...person}\r\n            removePerson={removePerson}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst SinglePerson = ({ id, name, removePerson }) => {\r\n  return (\r\n    <div className='item'>\r\n      <h4>{name}</h4>\r\n      <button onClick={() => removePerson(id)}>remove</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropDrilling;"]},"metadata":{},"sourceType":"module"}